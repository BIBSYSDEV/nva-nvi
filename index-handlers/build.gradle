plugins {
    id 'nva.nvi.java-conventions'
}
dependencies {
    implementation project(':nvi-commons')
    implementation libs.nva.json
    implementation libs.nva.core
    implementation libs.nva.commons.secrets
    implementation libs.nva.commons.auth
    implementation libs.nva.commons.apigateway
    implementation libs.nva.commons.pagination
    implementation libs.nva.commons.clients
    implementation libs.nva.s3
    implementation libs.nva.language

    implementation libs.aws.lambda.java.core
    implementation libs.aws.lambda.events
    implementation libs.aws.java.sdk.core
    implementation libs.aws.sdk2.s3
    implementation libs.aws.sdk2.sqs
    implementation libs.aws.sdk2.apache.client
    implementation libs.aws.sdk2.regions
    implementation libs.aws.sdk2.dynamodb

    implementation libs.opensearch.java
    implementation libs.opensearch.rest.client
    implementation libs.jackson.core
    implementation libs.jackson.databind
    implementation libs.com.auth0.jwt
    implementation libs.guava
    implementation libs.jena.core
    implementation libs.bundles.apachePoi

    testImplementation 'org.opensearch:opensearch-testcontainers:2.0.0'
    testImplementation "org.testcontainers:testcontainers:1.18.3"
    testImplementation 'org.testcontainers:junit-jupiter:1.18.3'

    testImplementation 'com.opencsv:opencsv:5.9'
    testImplementation libs.dynamodDbLocal
    testImplementation project(':nvi-test')

    implementation libs.bundles.jacksonjr
    implementation libs.bundles.logging

    testImplementation(testFixtures(project(":nvi-commons")))
}

test {
    useJUnitPlatform()
    environment("EXPANDED_RESOURCES_BUCKET", "ignoredBucket")
    environment("SEARCH_INFRASTRUCTURE_API_HOST", "localhost")
    environment("SEARCH_INFRASTRUCTURE_AUTH_URI", "localhost")
    environment("SEARCH_INFRASTRUCTURE_API_URI", "localhost")
    environment("NVI_TABLE_NAME", "some-table")
    environment("ALLOWED_ORIGIN", "*")
    environment("API_HOST", "example.com")
    environment("CUSTOM_DOMAIN_BASE_PATH", "scientific-index")
    environment("BACKEND_CLIENT_AUTH_URL", "My url")
    environment("BACKEND_CLIENT_SECRET_NAME", "My secret name")
    environment("PERSISTED_INDEX_DOCUMENT_QUEUE_URL", "PersistedIndexDocumentQueue")
    environment("INDEX_DLQ", "IndexDlq")
    environment("INSTITUTION_REPORT_SEARCH_PAGE_SIZE", "4")
}
