plugins {
    id 'nva.nvi.java-conventions'
    id 'nva.nvi.dynamodblocal'
}
dependencies {
    implementation project(':nvi-commons')
    implementation libs.nva.json
    implementation libs.nva.core
    implementation libs.nva.commons.secrets
    implementation libs.nva.commons.auth
    implementation libs.nva.commons.apigateway
    implementation libs.nva.s3


    implementation libs.aws.lambda.java.core
    implementation libs.aws.lambda.events
    implementation libs.aws.java.sdk.core
    implementation libs.aws.sdk2.s3
    implementation libs.aws.sdk2.sqs
    implementation libs.aws.sdk2.apache.client
    implementation libs.aws.sdk2.regions

    implementation libs.opensearch.java
    implementation libs.opensearch.rest.client
    implementation libs.jackson.core
    implementation libs.jackson.databind
    implementation libs.com.auth0.jwt
    implementation libs.guava

    testImplementation 'org.opensearch:opensearch-testcontainers:2.0.0'
    testImplementation "org.testcontainers:testcontainers:1.18.3"
    testImplementation 'org.testcontainers:junit-jupiter:1.18.3'

    testImplementation project(':nvi-test')
    testImplementation(group: 'com.amazonaws', name: 'DynamoDBLocal', version: '1.19.0') {
        exclude group: 'com.amazonaws', module: 'aws-java-sdk-dynamodb'
        exclude group: 'com.amazonaws', module: 'aws-java-sdk-core'
    }


    implementation libs.bundles.jacksonjr
    implementation libs.bundles.logging
}

test {
    useJUnitPlatform()
    environment("EXPANDED_RESOURCES_BUCKET", "ignoredBucket")
    environment("SEARCH_INFRASTRUCTURE_API_HOST", "localhost")
    environment("SEARCH_INFRASTRUCTURE_AUTH_URI", "localhost")
    environment("SEARCH_INFRASTRUCTURE_API_URI", "localhost")
    environment("NVI_TABLE_NAME", "some-table")
    environment("ALLOWED_ORIGIN", "*")
    environment("API_HOST", "example.com")
}