PREFIX : <https://nva.sikt.no/ontology/publication#>
# This builds a flattened and simplified version of an expanded publication.
# We assume the JSON contains a single publication object, and we extract the relevant fields.
# In order to handle edge-cases and to guard against missing data, we use tricks like
# OPTIONAL, COALESCE, and SAMPLE to ensure the output is as complete as possible.
# This means that even if a field is set as OPTIONAL in this query, it probably should never be
# missing in production data.

CONSTRUCT {
  # Build a simplified version of the main publication object
  ?pub a :Publication ;
  :identifier ?identifier ;
  :title ?title ;
  :status ?status ;
  :language ?language ;
  :publicationDate ?date ;
  :publicationType ?instanceType ;
  :isInternationalCollaboration ?isInternationalCollaboration ;
  :publicationChannel ?channel ;
  :contributor ?personId ;
  :topLevelOrganization ?topOrg ;
  :modifiedDate ?modifiedDate .

  # Include publication channels
  ?channel a :PublicationChannel ;
  :channelType ?channelType ;
  :identifier ?channelIdentifier ;
  :name ?channelName ;
  :scientificValue ?channelLevel ;
  :year ?channelYear ;
  :onlineIssn ?onlineIssn ;
  :printIssn ?printIssn .

  # Include the publication date
  ?date a :PublicationDate ;
  :year ?year ;
  :month ?month ;
  :day ?day .

  # Include the organization hierarchy
  ?topOrg a :Organization .
  ?org a :Organization ;
  :countryCode ?country ;
  :label ?label ;
  :partOf ?parent ;
  :hasPart ?child .

  # Include all contributors
  ?personId a :Contributor ;
  :affiliation ?affiliations ;
  :role ?roleType ;
  :verificationStatus ?verificationStatus ;
  :name ?contributorName .
}

WHERE {
  # Find the main publication object and basic fields
  ?pub a :Publication .
  ?pub :status ?status .
  OPTIONAL { ?pub :identifier ?identifier }
  OPTIONAL { ?pub :modifiedDate ?modifiedDate }

  ?pub :entityDescription ?entityDescription .
  OPTIONAL { ?entityDescription :mainTitle ?title }
  OPTIONAL { ?entityDescription :language ?language }

  # Find publication date
  ?date a :PublicationDate .
  ?date :year ?year .
  OPTIONAL { ?date :month ?month . }
  OPTIONAL { ?date :day ?day . }

  # Find publication type
  ?reference a :Reference .
  ?reference :publicationInstance ?instance .
  ?instance a ?instanceType .

  # Find all publication channels
  OPTIONAL {
    ?channel a ?allowedChannelType .
    OPTIONAL { ?channel :scientificValue ?channelLevel }
    OPTIONAL { ?channel :name ?channelName }
    OPTIONAL { ?channel :identifier ?channelIdentifier }
    OPTIONAL { ?channel :year ?channelYear }
    OPTIONAL { ?channel :onlineIssn ?onlineIssn } .
    OPTIONAL { ?channel :printIssn ?printIssn } .

    # Flatten type to a single value (in order of preference: Journal, Series, Publisher)
    # This is done to handle edge-cases where a channel has multiple types due to inconsistent data.
    VALUES ?allowedChannelType { :Publisher :Series :Journal }
    {
      SELECT ?channel (COALESCE(
      SAMPLE(?journalType),
      SAMPLE(?seriesType),
      SAMPLE(?publisherType)
      ) AS ?channelType)
      WHERE {
        ?channel a ?allowedChannelType .
        OPTIONAL {
          ?channel a :Journal .
          BIND(:Journal AS ?journalType)
        }
        OPTIONAL {
          ?channel a :Series .
          BIND(:Series AS ?seriesType)
        }
        OPTIONAL {
          ?channel a :Publisher .
          BIND(:Publisher AS ?publisherType)
        }
      }
      GROUP BY ?channel
    }
  }

  # Find the top-level organizations as a separate node
  # TODO: Derive this from Organization nodes instead of relying on a fixed property?
  OPTIONAL {
    ?pub :topLevelOrganization ?topOrg .
    ?topOrg a :Organization .
  }

  # Find all organizations
  ?org a :Organization .
  OPTIONAL { ?org :partOf ?parent }
  OPTIONAL { ?org :hasPart ?child }
  OPTIONAL { ?org :label ?label }
  OPTIONAL { ?org :country ?country }

  # Check if the publication is an international collaboration
  {
    SELECT (EXISTS {
      ?nonNorwegianOrganization a :Organization ;
      :country ?country .
      FILTER(?country != "NO")
    } AS ?isInternationalCollaboration)
    WHERE {}
  }

  # Find all contributors
  OPTIONAL {
    SELECT DISTINCT ?personId ?contributorName ?verificationStatus ?roleType ?affiliations
    WHERE {
      ?pub :entityDescription/:contributor ?contributor .
      ?contributor :identity ?personId .

      OPTIONAL {
        ?contributor :identity ?personId .
        FILTER(BOUND(?personId))

        OPTIONAL {
          ?personId :name ?contributorName .
        }
        ?personId :verificationStatus ?verificationStatus .
      }

      ?contributor :role ?role .
      ?role a ?roleType .
      ?contributor :affiliation ?affiliations .
    }
    GROUP BY ?personId ?contributorName ?verificationStatus ?roleType ?affiliations
  }
}
