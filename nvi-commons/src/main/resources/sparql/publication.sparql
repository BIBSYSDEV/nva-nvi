PREFIX nva: <https://nva.sikt.no/ontology/publication#>
# This builds a flattened and simplified version of an expanded publication.
# We assume the JSON contains a single publication object, and we extract the relevant fields.
# In order to handle edge-cases and to guard against missing data, we use tricks like
# OPTIONAL, COALESCE, and MAX to ensure the output is as complete as possible.
# This means that even if a field is set as OPTIONAL in this query, it probably should never be
# missing in production data.

CONSTRUCT {
  # Build a simplified version of the main publication object
  ?pub a nva:ExpandedPublication ;
  nva:publicationTitle ?title ;
  nva:publicationDate ?date ;
  nva:publicationStatus ?status ;
  nva:publicationType ?instanceType ;
  nva:publicationLanguage ?language ;
  nva:isInternationalCollaboration ?isInternationalCollaboration ;
  nva:publicationChannels ?channel ;
  nva:contributors ?contributorNode ;
  nva:topLevelOrganizations ?topOrg ;
  nva:modifiedDate ?modifiedDate .

  ?channel a nva:PublicationChannelTemp ;
  nva:channelType ?channelType ;
  nva:identifier ?channelIdentifier ;
  nva:name ?channelName ;
  nva:scientificValue ?channelLevel ;
  nva:year ?channelYear ;
  nva:onlineIssn ?onlineIssn ;
  nva:printIssn ?printIssn ;
  nva:sameAs ?sameAs .

  # Include the publication date
  ?date a nva:PublicationDate ;
  nva:year ?year ;
  nva:month ?month ;
  nva:day ?day .

  # Include the organization hierarchy
  ?org a nva:Organization ;
  nva:country ?country ;
  nva:label ?label ;
  nva:partOf ?parent ;
  nva:hasPart ?child .

  # Include all contributors
  ?contributorNode a nva:Contributor ;
  nva:affiliations ?affiliations ;
  nva:role ?roleType ;
  nva:verificationStatus ?verificationStatus ;
  nva:name ?contributorName .
}

WHERE {
  ?pub a nva:Publication .
  ?pub nva:status ?status .
  ?pub nva:entityDescription ?entityDescription .
  OPTIONAL { ?entityDescription nva:mainTitle ?title . }
  OPTIONAL { ?pub nva:modifiedDate ?modifiedDate }
  OPTIONAL { ?entityDescription nva:language ?language }

  # Extract publication date
  ?date a nva:PublicationDate .
  ?date nva:year ?year .
  OPTIONAL { ?date nva:month ?month . }
  OPTIONAL { ?date nva:day ?day . }

  # Extract publication type
  ?reference a nva:Reference .
  ?reference nva:publicationInstance ?instance .
  ?instance a ?instanceType .


  # Find all publication channels
  OPTIONAL {
    ?channel a ?allowedChannelType .
    OPTIONAL { ?channel nva:scientificValue ?channelLevel }
    OPTIONAL { ?channel nva:name ?channelName }
    OPTIONAL { ?channel nva:identifier ?channelIdentifier }
    OPTIONAL { ?channel nva:year ?channelYear }
    OPTIONAL { ?channel nva:onlineIssn ?onlineIssn } .
    OPTIONAL { ?channel nva:printIssn ?printIssn } .
    OPTIONAL { ?channel nva:sameAs ?sameAs } .

    # Flatten type to a single value (in order of preference: Journal, Series, Publisher)
    # This is done to handle edge-cases where a channel has multiple types due to inconsistent data.
    VALUES ?allowedChannelType { nva:Publisher nva:Series nva:Journal }
    {
      SELECT ?channel (COALESCE(
      SAMPLE(?journalType),
      SAMPLE(?seriesType),
      SAMPLE(?publisherType)
      ) AS ?channelType)
      WHERE {
        ?channel a ?allowedChannelType .
        OPTIONAL {
          ?channel a nva:Journal .
          BIND(nva:Journal AS ?journalType)
        }
        OPTIONAL {
          ?channel a nva:Series .
          BIND(nva:Series AS ?seriesType)
        }
        OPTIONAL {
          ?channel a nva:Publisher .
          BIND(nva:Publisher AS ?publisherType)
        }
      }
      GROUP BY ?channel
    }
  }

  # Map organizations as a single tree structure
  # FIXME: Some docs are plural, some are not?
  OPTIONAL  { ?pub nva:topLevelOrganization ?topOrg }

  ?org a nva:Organization .
  OPTIONAL { ?org nva:partOf ?parent }
  OPTIONAL { ?org nva:hasPart ?child }
  OPTIONAL { ?org nva:label ?label }
  OPTIONAL { ?org nva:country ?country }
  OPTIONAL {
    ?pub nva:topLevelOrganizations ?topOrg .
    # Check if the publication is an international collaboration
    {
      SELECT (COUNT(?nonNorOrg) AS ?nonNorCount)
      WHERE {
        ?nonNorOrg a nva:Organization .
        OPTIONAL { ?nonNorOrg nva:country ?country }
        FILTER(bound(?country) && ?country != "NO")
      }
    }
    BIND(IF(?nonNorCount > 0, true, false) AS ?isInternationalCollaboration)
  }

  # Contributors - Find contributors and flatten the data structure
  OPTIONAL {
    ?contributor a nva:Contributor .
    ?contributor nva:identity ?personId .
    ?contributor nva:affiliation ?affiliations .
    #    ?contributor nva:role ?roleRaw .
    #    ?roleRaw a ?roleType

    {
      SELECT (MAX(?thing) AS ?roleType)
      WHERE {
        ?contributor nva:role ?roleRaw .
        ?roleRaw a ?thing
      }
    }

    OPTIONAL { ?personId nva:verificationStatus ?verificationStatus }
    OPTIONAL { ?personId nva:name ?contributorName }
    OPTIONAL {
      ?personId nva:id ?identifierUri ;
      BIND(REPLACE(STR(?identifierUri), "^.*/([^/]*)$", "$1") AS ?contributorIdentifier)
    }
    #    BIND(REPLACE(STR(?roleType), "https://nva.sikt.no/ontology/publication#", "", "i") AS ?contributorRole)

    # Cast ID to string to include blank nodes (generates a unique ID if the value is missing)
    BIND(IRI(STR(?personId)) AS ?contributorNode)
  }

}
