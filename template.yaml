AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Description: >
  AWS
  
  SAM Template for NVA NVI API
Globals:
  Function:
    Timeout: 20
    Runtime: java17
    MemorySize: 1536
    Environment:
      Variables:
        NVI_TABLE_NAME: !Ref NvaNviTable
        SEARCH_INFRASTRUCTURE_API_HOST: !Ref SearchInfrastructureApiHost
        SEARCH_INFRASTRUCTURE_AUTH_URI: !Ref SearchInfrastructureAuthUri
        CUSTOM_DOMAIN_BASE_PATH: !Ref CustomDomainBasePath
        API_HOST: !Ref ApiDomain
  Api:
    Cors:
      AllowMethods: "'PUT, GET,OPTIONS,DELETE,POST'"
      AllowHeaders: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,Location'"
      AllowOrigin: "'*'"

Parameters:
  CognitoAuthorizerArn:
    Type: 'AWS::SSM::Parameter::Value<String>'
    Description: Reference to Cognito UserPool for the stage
    Default: CognitoAuthorizerArn
  CognitoAuthorizationUri:
    Type: 'AWS::SSM::Parameter::Value<String>'
    Default: '/NVA/CognitoUri'
  ApiDomain:
    Type: 'AWS::SSM::Parameter::Value<String>'
    Description: The Api domain
    Default: /NVA/ApiDomain
  EventBusName:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /NVA/Events/EventsBusName
  EventBusArn:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /NVA/Events/EventsBusArn
  ResourcesBucket:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /NVA/Events/PersistedEntriesBucketName
  PersistedResourceQueueName:
    Type: String
    Default: PersistedResourceQueue
  PersistedResourceDLQName:
    Type: String
    Default: PersistedResourceDLQ
  NewCandidateQueueName:
    Type: String
    Default: NewCandidateQueue
  DbEventQueueName:
    Type: String
    Default: DbEventQueue
  NewCandidateDLQName:
    Type: String
    Default: NewCandidateDLQ
  BatchScanDLQName:
    Type: String
    Default: BatchScanDLQ
  UpdateIndexDLQName:
    Type: String
    Default: UpdateIndexDLQ
  UpsertCandidateDLQName:
    Type: String
    Default: UpsertCandidateDLQ
  ReEvaluateDLQName:
    Type: String
    Default: ReEvaluateDLQ
  GenerateIndexDocumentQueueName:
    Type: String
    Default: GenerateIndexDocumentQueue
  RemoveDocumentFromIndexQueueName:
    Type: String
    Default: RemoveDocumentFromIndexQueue
  RemoveDocumentFromIndexDLQName:
    Type: String
    Default: RemoveDocumentFromIndexDLQ
  DeletePersistedIndexDocumentQueueName:
    Type: String
    Default: DeletePersistedIndexDocumentQueue
  DeletePersistedIndexDocumentDLQName:
    Type: String
    Default: DeletePersistedIndexDocumentDLQ
  PersistedIndexDocumentQueueName:
    Type: String
    Default: PersistedIndexDocumentQueue
  IndexDLQName:
    Type: String
    Default: IndexDLQ
  DynamoDbEventToQueueDLQName:
    Type: String
    Default: DynamoDbEventToQueueDLQ
  DataEntryUpdateDLQName:
    Type: String
    Default: DataEntryUpdateDLQ
  IndexDocumentDLQName:
    Type: String
    Default: IndexDocumentDLQ
  SearchInfrastructureApiHost:
    Type: String
    Description: Host of external search infrastructure API (SWS).
    Default: 'https://api.sws.aws.sikt.no'
  SearchInfrastructureAuthUri:
    Type: String
    Description: URI to auth for external search infrastructure API (SWS).
    Default: 'https://sws-auth.auth.eu-west-1.amazoncognito.com'
  CustomDomainBasePath:
    Type: String
    Description: Base path mapping in CustomDomain
    Default: scientific-index
  Suffix:
    Type: String
    Default: ''
    Description: Suffix used for naming resources for feature branches to avoid conflicts.
  SlackSnsArn:
    Type: AWS::SSM::Parameter::Value<String>
    Default: '/NVA/Monitoring/SlackSnsArn'
  NviDataEntryUpdateCandidateInsertTopicName:
    Type: String
    Default: nvi-data-entry-update-candidate-insert
  NviDataEntryUpdateCandidateApplicableUpdateTopicName:
    Type: String
    Default: nvi-data-entry-update-candidate-applicable-update
  NviDataEntryUpdateCandidateNotApplicableUpdateTopicName:
    Type: String
    Default: nvi-data-entry-update-candidate-not-applicable-update
  NviDataEntryUpdateCandidateRemoveTopicName:
    Type: String
    Default: nvi-data-entry-update-candidate-remove
  NviDataEntryUpdateApprovalInsertTopicName:
    Type: String
    Default: nvi-data-entry-update-approval-insert
  NviDataEntryUpdateApprovalUpdateTopicName:
    Type: String
    Default: nvi-data-entry-update-approval-update
  NviDataEntryUpdateApprovalRemoveTopicName:
    Type: String
    Default: nvi-data-entry-update-approval-remove

Conditions:
  WithSuffix: !Not [ !Equals [ !Ref Suffix, '' ] ]

Resources:

  ApiAccessLogGroup:
    Type: AWS::Logs::LogGroup

  InternalBus:
    Type: AWS::Events::EventBus
    Properties:
      Name: !Join [ '',[ 'nvi-internal-bus',!Ref Suffix ] ]

  #=============================== SNS topics ======================================================
  NviDataEntryUpdateCandidateInsertTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: !Ref NviDataEntryUpdateCandidateInsertTopicName

  NviDataEntryUpdateCandidateApplicableUpdateTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: !Ref NviDataEntryUpdateCandidateApplicableUpdateTopicName

  NviDataEntryUpdateCandidateNotApplicableUpdateTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: !Ref NviDataEntryUpdateCandidateNotApplicableUpdateTopicName

  NviDataEntryUpdateCandidateRemoveTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: !Ref NviDataEntryUpdateCandidateRemoveTopicName

  NviDataEntryUpdateApprovalInsertTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: !Ref NviDataEntryUpdateApprovalInsertTopicName

  NviDataEntryUpdateApprovalUpdateTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: !Ref NviDataEntryUpdateApprovalUpdateTopicName

  NviDataEntryUpdateApprovalRemoveTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: !Ref NviDataEntryUpdateApprovalRemoveTopicName

  #=============================== SNS subscriptions ======================================================

  #The reason subscriptions are defined seperately, from aws docs:
  #If you specify the Subscription property in the AWS::SNS::Topic resource, and it creates an associated
  #subscription resource, the associated subscription is not deleted when the AWS::SNS::Topic resource is deleted.

  NviDataEntryUpdateCandidateInsertSubscription:
    Type: AWS::SNS::Subscription
    Properties:
      Protocol: sqs
      Endpoint: !GetAtt GenerateIndexDocumentQueue.Arn
      TopicArn: !Ref NviDataEntryUpdateCandidateInsertTopic
      RawMessageDelivery: true

  NviDataEntryUpdateCandidateApplicableUpdateSubscription:
    Type: AWS::SNS::Subscription
    Properties:
      Protocol: sqs
      Endpoint: !GetAtt GenerateIndexDocumentQueue.Arn
      TopicArn: !Ref NviDataEntryUpdateCandidateApplicableUpdateTopic
      RawMessageDelivery: true

  NviDataEntryUpdateCandidateNotApplicableUpdateSubscription:
    Type: AWS::SNS::Subscription
    Properties:
      Protocol: sqs
      Endpoint: !GetAtt RemoveDocumentFromIndexQueue.Arn
      TopicArn: !Ref NviDataEntryUpdateCandidateNotApplicableUpdateTopic
      RawMessageDelivery: true

  NviDataEntryUpdateCandidateRemoveSubscription:
    Type: AWS::SNS::Subscription
    Properties:
      Protocol: sqs
      Endpoint: !GetAtt RemoveDocumentFromIndexQueue.Arn
      TopicArn: !Ref NviDataEntryUpdateCandidateRemoveTopic
      RawMessageDelivery: true

  NviDataEntryUpdateCandidateNotApplicableUpdateDeleteDocumentSubscription:
    Type: AWS::SNS::Subscription
    Properties:
      Protocol: sqs
      Endpoint: !GetAtt DeletePersistedIndexDocumentQueue.Arn
      TopicArn: !Ref NviDataEntryUpdateCandidateNotApplicableUpdateTopic
      RawMessageDelivery: true

  NviDataEntryUpdateCandidateRemoveDeleteDocumentSubscription:
    Type: AWS::SNS::Subscription
    Properties:
      Protocol: sqs
      Endpoint: !GetAtt DeletePersistedIndexDocumentQueue.Arn
      TopicArn: !Ref NviDataEntryUpdateCandidateRemoveTopic
      RawMessageDelivery: true

  NviDataEntryUpdateApprovalInsertSubscription:
    Type: AWS::SNS::Subscription
    Properties:
      Protocol: sqs
      Endpoint: !GetAtt GenerateIndexDocumentQueue.Arn
      TopicArn: !Ref NviDataEntryUpdateApprovalInsertTopic
      RawMessageDelivery: true

  NviDataEntryUpdateApprovalUpdateSubscription:
    Type: AWS::SNS::Subscription
    Properties:
      Protocol: sqs
      Endpoint: !GetAtt GenerateIndexDocumentQueue.Arn
      TopicArn: !Ref NviDataEntryUpdateApprovalUpdateTopic
      RawMessageDelivery: true

  NviDataEntryUpdateApprovalRemoveSubscription:
    Type: AWS::SNS::Subscription
    Properties:
      Protocol: sqs
      Endpoint: !GetAtt GenerateIndexDocumentQueue.Arn
      TopicArn: !Ref NviDataEntryUpdateApprovalRemoveTopic
      RawMessageDelivery: true


  #=============================== SQSs ============================================================
  #=============================== For event handling ==============================================
  PersistedResourceQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Ref PersistedResourceQueueName
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt PersistedResourceDLQ.Arn
        maxReceiveCount: 5
  NewCandidateQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Ref NewCandidateQueueName
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt NewCandidateDLQ.Arn
        maxReceiveCount: 5
  #=============================== Event handling DLQs =============================================
  NewCandidateDLQ:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Ref NewCandidateDLQName
      MessageRetentionPeriod: 1209600 #14 days
  UpsertCandidateDLQ:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Ref UpsertCandidateDLQName
      MessageRetentionPeriod: 1209600 #14 days
  BatchScanDLQ:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Ref BatchScanDLQName
      MessageRetentionPeriod: 1209600 #14 days
  PersistedResourceDLQ:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Ref PersistedResourceDLQName
      MessageRetentionPeriod: 1209600 #14 days
  ReEvaluateDLQ:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Ref ReEvaluateDLQName
      MessageRetentionPeriod: 1209600 #14 days

  #=============================== For database events ============================================
  DbEventQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Ref DbEventQueueName
      VisibilityTimeout: 60
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt DataEntryUpdateDLQ.Arn
        maxReceiveCount: 5
  #=============================== Database event DLQs ============================================
  DynamoDbEventToQueueDLQ:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Ref DynamoDbEventToQueueDLQName
      MessageRetentionPeriod: 1209600 #14 days
  DataEntryUpdateDLQ:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Ref DataEntryUpdateDLQName
      MessageRetentionPeriod: 1209600 #14 days
  #=============================== For index handling =============================================
  GenerateIndexDocumentQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Ref GenerateIndexDocumentQueueName
      VisibilityTimeout: 60
      RedrivePolicy:
          deadLetterTargetArn: !GetAtt IndexDocumentDLQ.Arn
          maxReceiveCount: 5
  RemoveDocumentFromIndexQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Ref RemoveDocumentFromIndexQueueName
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt RemoveDocumentFromIndexDLQ.Arn
        maxReceiveCount: 5
  PersistedIndexDocumentQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Ref PersistedIndexDocumentQueueName
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt UpdateIndexDLQ.Arn
        maxReceiveCount: 5
  DeletePersistedIndexDocumentQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Ref DeletePersistedIndexDocumentQueueName
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt DeletePersistedIndexDocumentDLQ.Arn
        maxReceiveCount: 5
  #=============================== Index handling DLQs ============================================
  IndexDLQ:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Ref IndexDLQName
      MessageRetentionPeriod: 1209600 #14 days
  IndexDocumentDLQ:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Ref IndexDocumentDLQName
      MessageRetentionPeriod: 1209600 #14 days
  UpdateIndexDLQ:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Ref UpdateIndexDLQName
      MessageRetentionPeriod: 1209600 #14 days
  RemoveDocumentFromIndexDLQ:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Ref RemoveDocumentFromIndexDLQName
      MessageRetentionPeriod: 1209600 #14 days
  DeletePersistedIndexDocumentDLQ:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Ref DeletePersistedIndexDocumentDLQName
      MessageRetentionPeriod: 1209600 #14 days

  #============================= Permissions =======================================================
  NvaNviRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: [ lambda.amazonaws.com ]
            Action: [ 'sts:AssumeRole' ]
      Policies:
        - PolicyName: S3Access
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - s3:Get*
                  - s3:List*
                  - s3:PutObject
                  - secretsmanager:*
                Resource: '*'
        - PolicyName: Events
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - events:*
                Resource:
                  - !Ref EventBusArn
                  - !GetAtt InternalBus.Arn
        - PolicyName: writeLog
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:*:*'
        - PolicyName: readSqs
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - sqs:SendMessage
                  - sqs:ReceiveMessage
                  - sqs:DeleteMessage
                  - sqs:GetQueueAttributes
                  - sqs:ChangeMessageVisibility
                Resource:
                  - !GetAtt PersistedResourceQueue.Arn
                  - !GetAtt NewCandidateQueue.Arn
                  - !GetAtt DbEventQueue.Arn
                  - !GetAtt PersistedIndexDocumentQueue.Arn
                  - !GetAtt GenerateIndexDocumentQueue.Arn
                  - !GetAtt RemoveDocumentFromIndexQueue.Arn
                  - !GetAtt RemoveDocumentFromIndexDLQ.Arn
                  - !GetAtt PersistedResourceDLQ.Arn
                  - !GetAtt NewCandidateDLQ.Arn
                  - !GetAtt BatchScanDLQ.Arn
                  - !GetAtt UpdateIndexDLQ.Arn
                  - !GetAtt UpsertCandidateDLQ.Arn
                  - !GetAtt ReEvaluateDLQ.Arn
                  - !GetAtt IndexDLQ.Arn
                  - !GetAtt DynamoDbEventToQueueDLQ.Arn
                  - !GetAtt DataEntryUpdateDLQ.Arn
                  - !GetAtt IndexDocumentDLQ.Arn
                  - !GetAtt DeletePersistedIndexDocumentDLQ.Arn
                  - !GetAtt DeletePersistedIndexDocumentQueue.Arn
        - PolicyName: publishToSnsTopic
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - sns:Publish
                Resource:
                  - !Ref NviDataEntryUpdateCandidateInsertTopic
                  - !Ref NviDataEntryUpdateCandidateApplicableUpdateTopic
                  - !Ref NviDataEntryUpdateCandidateNotApplicableUpdateTopic
                  - !Ref NviDataEntryUpdateCandidateRemoveTopic
                  - !Ref NviDataEntryUpdateApprovalInsertTopic
                  - !Ref NviDataEntryUpdateApprovalUpdateTopic
                  - !Ref NviDataEntryUpdateApprovalRemoveTopic
        - PolicyName: subscribeOnSnsTopic
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - sns:Subscribe
                Resource:
                  - !GetAtt GenerateIndexDocumentQueue.Arn
                  - !GetAtt RemoveDocumentFromIndexQueue.Arn
                  - !GetAtt DeletePersistedIndexDocumentQueue.Arn
        - PolicyName: readSecret
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - secretsmanager:GetSecretValue
                Resource: '*'
        - PolicyName: invokeFunction
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - lambda:InvokeFunction
                Resource: '*'
        - PolicyName: crudDynamodb
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:BatchGetItem
                  - dynamodb:BatchWriteItem
                  - dynamodb:DeleteItem
                  - dynamodb:DescribeLimits
                  - dynamodb:DescribeReservedCapacity
                  - dynamodb:DescribeReservedCapacityOfferings
                  - dynamodb:DescribeTable
                  - dynamodb:GetItem
                  - dynamodb:GetRecords
                  - dynamodb:ListStreams
                  - dynamodb:PutItem
                  - dynamodb:Query
                  - dynamodb:Scan
                  - dynamodb:UpdateItem
                Resource:
                  - !GetAtt NvaNviTable.Arn
        - PolicyName: crudDynamoDbIndex
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:*
                Resource:
                  - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/nva-nvi-${AWS::StackName}/index/*
        - PolicyName: DynamoDbStreamAccessPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:GetShardIterator
                  - dynamodb:DescribeStream
                  - dynamodb:ListStreams
                  - dynamodb:GetRecords
                Resource:
                  - !GetAtt NvaNviTable.StreamArn

  GenerateIndexDocumentQueuePolicy:
    Type: AWS::SQS::QueuePolicy
    Properties:
      PolicyDocument:
        Id: MyQueuePolicy
        Version: '2012-10-17'
        Statement:
          - Sid: Allow-SNS-SendMessage
            Effect: Allow
            Principal: '*'
            Action: sqs:SendMessage
            Resource:
              - !GetAtt GenerateIndexDocumentQueue.Arn
            Condition:
              ArnEquals:
                aws:SourceArn:
                  - !Ref NviDataEntryUpdateCandidateInsertTopic
                  - !Ref NviDataEntryUpdateCandidateApplicableUpdateTopic
                  - !Ref NviDataEntryUpdateApprovalInsertTopic
                  - !Ref NviDataEntryUpdateApprovalUpdateTopic
                  - !Ref NviDataEntryUpdateApprovalRemoveTopic
      Queues:
        - !Ref GenerateIndexDocumentQueue

  RemoveDocumentFromIndexQueuePolicy:
    Type: AWS::SQS::QueuePolicy
    Properties:
      PolicyDocument:
        Id: MyQueuePolicy
        Version: '2012-10-17'
        Statement:
          - Sid: Allow-SNS-SendMessage
            Effect: Allow
            Principal: '*'
            Action: sqs:SendMessage
            Resource:
              - !GetAtt RemoveDocumentFromIndexQueue.Arn
            Condition:
              ArnEquals:
                aws:SourceArn:
                  - !Ref NviDataEntryUpdateCandidateNotApplicableUpdateTopic
                  - !Ref NviDataEntryUpdateCandidateRemoveTopic
      Queues:
        - !Ref RemoveDocumentFromIndexQueue

  DeletePersistedIndexDocumentQueuePolicy:
    Type: AWS::SQS::QueuePolicy
    Properties:
      PolicyDocument:
        Id: MyQueuePolicy
        Version: '2012-10-17'
        Statement:
          - Sid: Allow-SNS-SendMessage
            Effect: Allow
            Principal: '*'
            Action: sqs:SendMessage
            Resource:
              - !GetAtt DeletePersistedIndexDocumentQueue.Arn
            Condition:
              ArnEquals:
                aws:SourceArn:
                  - !Ref NviDataEntryUpdateCandidateNotApplicableUpdateTopic
                  - !Ref NviDataEntryUpdateCandidateRemoveTopic
      Queues:
        - !Ref DeletePersistedIndexDocumentQueue

  #============================= Roles ==========================================================
  ScientificIndexApi:
    Type: AWS::Serverless::Api
    Properties:
      AccessLogSetting:
        DestinationArn: !GetAtt ApiAccessLogGroup.Arn
        Format: '{ "apiId": "$context.apiId", "requestId": "$context.requestId", "requestTime": "$context.requestTime", "requestTimeEpoch": "$context.requestTimeEpoch", "httpMethod": "$context.httpMethod", "path": "$context.path", "status": "$context.status",  "error.message": "$context.error.message" }'
      StageName: Prod
      EndpointConfiguration:
        Type: REGIONAL
      DefinitionBody:
        'Fn::Transform':
          Name: AWS::Include
          Parameters:
            Location: ./docs/openapi.yaml

  #===========================BasePathMappings========================================================
  NviBasePathMapping:
    Type: AWS::ApiGateway::BasePathMapping
    Properties:
      BasePath: !If
        - WithSuffix
        - !Sub ${CustomDomainBasePath}-${Suffix}
        - !Sub ${CustomDomainBasePath}
      DomainName: !Ref ApiDomain
      RestApiId: !Ref ScientificIndexApi
      Stage: !Ref ScientificIndexApi.Stage

  #============================= Event Handlers ======================================================
  QueuePersistedResourceHandler:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: event-handlers
      Handler: no.sikt.nva.nvi.events.QueuePersistedResourceHandler::handleRequest
      Runtime: java17
      Role: !GetAtt NvaNviRole.Arn
      Timeout: 30
      MemorySize: 1536
      AutoPublishAlias: live
      Environment:
        Variables:
          PERSISTED_RESOURCE_QUEUE_URL: !Ref PersistedResourceQueue
      Events:
        EventBridgeEvent:
          Type: EventBridgeRule
          Properties:
            EventBusName: !Ref EventBusName
            Pattern:
              detail-type:
                - Lambda Function Invocation Result - Success
              detail:
                responsePayload:
                  topic: [ "PublicationService.ExpandedEntry.Persisted" ]
      EventInvokeConfig:
        DestinationConfig:
          OnFailure:
            Type: SQS
            Destination: !GetAtt PersistedResourceDLQ.Arn

  EvaluateNVICandidateHandler:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: event-handlers
      Handler: no.sikt.nva.nvi.events.evaluator.EvaluateNviCandidateHandler::handleRequest
      Runtime: java17
      Role: !GetAtt NvaNviRole.Arn
      Timeout: 30
      MemorySize: 1536
      Environment:
        Variables:
          BACKEND_CLIENT_AUTH_URL: !Ref CognitoAuthorizationUri
          BACKEND_CLIENT_SECRET_NAME: 'BackendCognitoClientCredentials'
          EXPANDED_RESOURCES_BUCKET: !Ref ResourcesBucket
          CANDIDATE_QUEUE_URL: !Ref NewCandidateQueue
      AutoPublishAlias: live
      Events:
        SqsEvent:
          Type: SQS
          Properties:
            Queue: !GetAtt PersistedResourceQueue.Arn
            BatchSize: 1
            #Note: EvaluateNVICandidateHandler is implemented to handle only batch size 1.
            #Don't change the batch size value, unless you change the implementation.
      EventInvokeConfig:
        DestinationConfig:
          OnFailure:
            Type: SQS
            Destination: !GetAtt NewCandidateDLQ.Arn

  UpsertNviCandidateHandler:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: event-handlers
      Handler: no.sikt.nva.nvi.events.persist.UpsertNviCandidateHandler::handleRequest
      Timeout: 30
      MemorySize: 1536
      Role: !GetAtt NvaNviRole.Arn
      AutoPublishAlias: live
      Environment:
        Variables:
          UPSERT_CANDIDATE_DLQ_QUEUE_URL: !Ref UpsertCandidateDLQ
      Events:
        SqsEvent:
          Type: SQS
          Properties:
            Queue: !GetAtt NewCandidateQueue.Arn

  DynamoDbEventToQueueHandler:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: event-handlers
      Handler: no.sikt.nva.nvi.events.db.DynamoDbEventToQueueHandler::handleRequest
      Runtime: java17
      Role: !GetAtt NvaNviRole.Arn
      AutoPublishAlias: live
      Timeout: 60
      Environment:
        Variables:
          DB_EVENTS_QUEUE_URL: !Ref DbEventQueue
          INDEX_DLQ: !Ref IndexDLQ
      Events:
        FanoutSource:
          Type: DynamoDB
          Properties:
            Stream: !GetAtt NvaNviTable.StreamArn
            StartingPosition: TRIM_HORIZON
            BatchSize: 1
            Enabled: true
      EventInvokeConfig:
        DestinationConfig:
          OnFailure:
            Type: SQS
            Destination: !GetAtt DynamoDbEventToQueueDLQ.Arn

  DataEntryUpdateHandler:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: event-handlers
      Handler: no.sikt.nva.nvi.events.db.DataEntryUpdateHandler::handleRequest
      Runtime: java17
      Role: !GetAtt NvaNviRole.Arn
      AutoPublishAlias: live
      Timeout: 60
      Environment:
        Variables:
          TOPIC_CANDIDATE_INSERT: !Ref NviDataEntryUpdateCandidateInsertTopic
          TOPIC_CANDIDATE_APPLICABLE_UPDATE: !Ref NviDataEntryUpdateCandidateApplicableUpdateTopic
          TOPIC_CANDIDATE_NOT_APPLICABLE_UPDATE: !Ref NviDataEntryUpdateCandidateNotApplicableUpdateTopic
          TOPIC_CANDIDATE_REMOVE: !Ref NviDataEntryUpdateCandidateRemoveTopic
          TOPIC_APPROVAL_INSERT: !Ref NviDataEntryUpdateApprovalInsertTopic
          TOPIC_APPROVAL_UPDATE: !Ref NviDataEntryUpdateApprovalUpdateTopic
          TOPIC_APPROVAL_REMOVE: !Ref NviDataEntryUpdateApprovalRemoveTopic
          INDEX_DLQ: !Ref IndexDLQ
      Events:
        SqsEvent:
          Type: SQS
          Properties:
            Queue: !GetAtt DbEventQueue.Arn
      EventInvokeConfig:
        DestinationConfig:
          OnFailure:
            Type: SQS
            Destination: !GetAtt DataEntryUpdateDLQ.Arn

  IndexDocumentHandler:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: index-handlers
      Handler: no.sikt.nva.nvi.index.IndexDocumentHandler::handleRequest
      Runtime: java17
      Role: !GetAtt NvaNviRole.Arn
      AutoPublishAlias: live
      Timeout: 60
      Environment:
        Variables:
          EXPANDED_RESOURCES_BUCKET: !Ref ResourcesBucket
          PERSISTED_INDEX_DOCUMENT_QUEUE_URL: !Ref PersistedIndexDocumentQueue
          INDEX_DLQ: !Ref IndexDLQ
      Events:
        SqsEvent:
          Type: SQS
          Properties:
            Queue: !GetAtt GenerateIndexDocumentQueue.Arn
      EventInvokeConfig:
        DestinationConfig:
          OnFailure:
            Type: SQS
            Destination: !GetAtt IndexDocumentDLQ.Arn

  UpdateIndexHandler:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: index-handlers
      Handler: no.sikt.nva.nvi.index.UpdateIndexHandler::handleRequest
      Runtime: java17
      Role: !GetAtt NvaNviRole.Arn
      AutoPublishAlias: live
      Timeout: 30
      Environment:
        Variables:
          EXPANDED_RESOURCES_BUCKET: !Ref ResourcesBucket
          INDEX_DLQ: !Ref IndexDLQ
      Events:
        SqsEvent:
          Type: SQS
          Properties:
            Queue: !GetAtt PersistedIndexDocumentQueue.Arn
      EventInvokeConfig:
        DestinationConfig:
          OnFailure:
            Type: SQS
            Destination: !GetAtt UpdateIndexDLQ.Arn

  RemoveIndexDocumentHandler:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: index-handlers
      Handler: no.sikt.nva.nvi.index.RemoveIndexDocumentHandler::handleRequest
      Runtime: java17
      Role: !GetAtt NvaNviRole.Arn
      AutoPublishAlias: live
      Timeout: 30
      Events:
        SqsEvent:
          Type: SQS
          Properties:
            Queue: !GetAtt RemoveDocumentFromIndexQueue.Arn
      EventInvokeConfig:
        DestinationConfig:
          OnFailure:
            Type: SQS
            Destination: !GetAtt RemoveDocumentFromIndexDLQ.Arn

  DeletePersistedIndexDocumentHandler:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: index-handlers
      Handler: no.sikt.nva.nvi.index.DeletePersistedIndexDocumentHandler::handleRequest
      Runtime: java17
      Role: !GetAtt NvaNviRole.Arn
      AutoPublishAlias: live
      Timeout: 30
      Environment:
        Variables:
          EXPANDED_RESOURCES_BUCKET: !Ref ResourcesBucket
          INDEX_DLQ: !Ref IndexDLQ
      Events:
        SqsEvent:
          Type: SQS
          Properties:
            Queue: !GetAtt DeletePersistedIndexDocumentQueue.Arn
      EventInvokeConfig:
        DestinationConfig:
          OnFailure:
            Type: SQS
            Destination: !GetAtt DeletePersistedIndexDocumentDlQ.Arn

  NviEventBasedBatchScanHandler:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: event-handlers
      Handler: no.sikt.nva.nvi.events.batch.EventBasedBatchScanHandler::handleRequest
      Runtime: java17
      Role: !GetAtt NvaNviRole.Arn
      AutoPublishAlias: live
      Timeout: 900
      Environment:
        Variables:
          EVENT_BUS_NAME: !GetAtt InternalBus.Name
      Events:
        EventBridgeEvent:
          Type: EventBridgeRule
          Properties:
            EventBusName: !GetAtt InternalBus.Name
            Pattern:
              detail:
                topic: [ "NviService.BatchScan" ]
      EventInvokeConfig:
        DestinationConfig:
          OnFailure:
            Type: SQS
            Destination: !GetAtt BatchScanDLQ.Arn


  #==========================Manually triggered functions=============================================

  InitHandler:
    Type: AWS::Serverless::Function
    Properties:
      Description: Lambda that creates indices. Needs to be run manually from Test
      CodeUri: index-handlers
      Handler: no.sikt.nva.nvi.index.InitHandler::handleRequest
      Role: !GetAtt NvaNviRole.Arn

  DeleteNviCandidateIndexHandler:
    Type: AWS::Serverless::Function
    Properties:
      Description: Lambda that deletes scientific index. Needs to be run manually from Test
      CodeUri: index-handlers
      Handler: no.sikt.nva.nvi.index.DeleteNviIndexHandler::handleRequest
      Role: !GetAtt NvaNviRole.Arn

  NviBatchScanStartHandler:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: event-handlers
      Handler: no.sikt.nva.nvi.events.batch.BatchScanStartHandler::handleRequest
      Runtime: java17
      Timeout: 60
      Role: !GetAtt NvaNviRole.Arn
      AutoPublishAlias: live
      Environment:
        Variables:
          EVENT_BUS_NAME: !GetAtt InternalBus.Name
          OUTPUT_EVENT_TOPIC: 'NviService.BatchScan'

  NviRequeueDlqHandler:
    Type: AWS::Serverless::Function
    Properties:
      Description: >
        Lambda that requeues messages from DLQ. Needs to be run manually from Test tab in 
        AWS console. Run with count as parameter to limit number of messages to requeue. Default is 10.
      CodeUri: event-handlers
      Handler: no.sikt.nva.nvi.events.batch.RequeueDlqHandler::handleRequest
      Role: !GetAtt NvaNviRole.Arn
      AutoPublishAlias: live
      Environment:
        Variables:
          DLQ_QUEUE_URL: !Ref IndexDLQ

  ReEvaluateNviCandidatesHandler:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: event-handlers
      Handler: no.sikt.nva.nvi.events.batch.ReEvaluateNviCandidatesHandler::handleRequest
      Runtime: java17
      Timeout: 60
      Role: !GetAtt NvaNviRole.Arn
      AutoPublishAlias: live
      Environment:
        Variables:
          EVENT_BUS_NAME: !GetAtt InternalBus.Name
          TOPIC_REEVALUATE_CANDIDATES: 'NviService.ReEvaluate'
          PERSISTED_RESOURCE_QUEUE_URL: !Ref PersistedResourceQueue
      Events:
        EventBridgeEvent:
          Type: EventBridgeRule
          Properties:
            EventBusName: !GetAtt InternalBus.Name
            Pattern:
              detail:
                topic: [ "NviService.ReEvaluate" ]
      EventInvokeConfig:
        DestinationConfig:
          OnFailure:
            Type: SQS
            Destination: !GetAtt ReEvaluateDLQ.Arn

  # ======================= API HANDLERS ========================

  FetchNviCandidateHandler:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: nvi-rest
      Handler: no.sikt.nva.nvi.rest.fetch.FetchNviCandidateHandler::handleRequest
      Role: !GetAtt NvaNviRole.Arn
      Timeout: 600
      MemorySize: 1536
      AutoPublishAlias: live
      Environment:
        Variables:
          ALLOWED_ORIGIN: '*'
      Events:
        GetEvent:
          Type: Api
          Properties:
            Path: /candidate/{candidateIdentifier}
            Method: get
            RestApiId: !Ref ScientificIndexApi

  FetchNviCandidateByPublicationIdHandler:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: nvi-rest
      Handler: no.sikt.nva.nvi.rest.fetch.FetchNviCandidateByPublicationIdHandler::handleRequest
      Role: !GetAtt NvaNviRole.Arn
      Timeout: 600
      MemorySize: 1536
      AutoPublishAlias: live
      Environment:
        Variables:
          ALLOWED_ORIGIN: '*'
      Events:
        GetEvent:
          Type: Api
          Properties:
            Path: /candidate/publication/{candidatePublicationId+}
            Method: get
            RestApiId: !Ref ScientificIndexApi

  UpdateNviCandidateStatusHandler:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: nvi-rest
      Handler: no.sikt.nva.nvi.rest.upsert.UpdateNviCandidateStatusHandler::handleRequest
      Role: !GetAtt NvaNviRole.Arn
      Timeout: 600
      MemorySize: 1536
      AutoPublishAlias: live
      Environment:
        Variables:
          ALLOWED_ORIGIN: '*'
      Events:
        GetEvent:
          Type: Api
          Properties:
            Path: /candidate/{candidateIdentifier}/status
            Method: put
            RestApiId: !Ref ScientificIndexApi

  UpsertAssigneeHandler:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: nvi-rest
      Handler: no.sikt.nva.nvi.rest.upsert.UpsertAssigneeHandler::handleRequest
      Role: !GetAtt NvaNviRole.Arn
      Timeout: 600
      MemorySize: 1536
      AutoPublishAlias: live
      Environment:
        Variables:
          ALLOWED_ORIGIN: '*'
          BACKEND_CLIENT_AUTH_URL: !Ref CognitoAuthorizationUri
          BACKEND_CLIENT_SECRET_NAME: 'BackendCognitoClientCredentials'
          COGNITO_HOST: !Ref CognitoAuthorizationUri
      Events:
        GetEvent:
          Type: Api
          Properties:
            Path: /candidate/{candidateIdentifier}/assignee
            Method: put
            RestApiId: !Ref ScientificIndexApi

  CreateNoteHandler:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: nvi-rest
      Handler: no.sikt.nva.nvi.rest.create.CreateNoteHandler::handleRequest
      Role: !GetAtt NvaNviRole.Arn
      Timeout: 600
      MemorySize: 1536
      AutoPublishAlias: live
      Environment:
        Variables:
          ALLOWED_ORIGIN: '*'
          BACKEND_CLIENT_AUTH_URL: !Ref CognitoAuthorizationUri
          BACKEND_CLIENT_SECRET_NAME: 'BackendCognitoClientCredentials'
          COGNITO_HOST: !Ref CognitoAuthorizationUri
      Events:
        GetEvent:
          Type: Api
          Properties:
            Path: /candidate/{candidateIdentifier}/note
            Method: post
            RestApiId: !Ref ScientificIndexApi

  RemoveNoteHandler:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: nvi-rest
      Handler: no.sikt.nva.nvi.rest.remove.RemoveNoteHandler::handleRequest
      Role: !GetAtt NvaNviRole.Arn
      Timeout: 600
      MemorySize: 1536
      AutoPublishAlias: live
      Environment:
        Variables:
          ALLOWED_ORIGIN: '*'
          BACKEND_CLIENT_AUTH_URL: !Ref CognitoAuthorizationUri
          BACKEND_CLIENT_SECRET_NAME: 'BackendCognitoClientCredentials'
          COGNITO_HOST: !Ref CognitoAuthorizationUri
      Events:
        GetEvent:
          Type: Api
          Properties:
            Path: /candidate/{candidateIdentifier}/note/{noteIdentifier}
            Method: delete
            RestApiId: !Ref ScientificIndexApi

  FetchReportHandler:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: nvi-rest
      Handler: no.sikt.nva.nvi.rest.fetch.FetchReportHandler::handleRequest
      Role: !GetAtt NvaNviRole.Arn
      Timeout: 600
      MemorySize: 1536
      AutoPublishAlias: live
      Environment:
        Variables:
          ALLOWED_ORIGIN: '*'
      Events:
        GetEvent:
          Type: Api
          Properties:
            Path: /report/{institutionId}
            Method: get
            RestApiId: !Ref ScientificIndexApi

  CreateNviPeriodHandler:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: nvi-rest
      Handler: no.sikt.nva.nvi.rest.create.CreateNviPeriodHandler::handleRequest
      Role: !GetAtt NvaNviRole.Arn
      Timeout: 600
      MemorySize: 1536
      AutoPublishAlias: live
      Environment:
        Variables:
          ALLOWED_ORIGIN: '*'
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /period
            Method: post
            RestApiId: !Ref ScientificIndexApi

  FetchNviPeriodsHandler:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: nvi-rest
      Handler: no.sikt.nva.nvi.rest.fetch.FetchNviPeriodsHandler::handleRequest
      Role: !GetAtt NvaNviRole.Arn
      Timeout: 600
      MemorySize: 1536
      AutoPublishAlias: live
      Environment:
        Variables:
          ALLOWED_ORIGIN: '*'
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /period
            Method: get
            RestApiId: !Ref ScientificIndexApi

  UpdateNviPeriodHandler:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: nvi-rest
      Handler: no.sikt.nva.nvi.rest.upsert.UpdateNviPeriodHandler::handleRequest
      Role: !GetAtt NvaNviRole.Arn
      Timeout: 600
      MemorySize: 1536
      AutoPublishAlias: live
      Environment:
        Variables:
          ALLOWED_ORIGIN: '*'
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /period
            Method: put
            RestApiId: !Ref ScientificIndexApi

  SearchNviCandidatesHandler:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: index-handlers
      Handler: no.sikt.nva.nvi.index.SearchNviCandidatesHandler::handleRequest
      Role: !GetAtt NvaNviRole.Arn
      Timeout: 600
      MemorySize: 1536
      AutoPublishAlias: live
      Environment:
        Variables:
          ALLOWED_ORIGIN: '*'
          COGNITO_HOST: !Ref CognitoAuthorizationUri
          BACKEND_CLIENT_AUTH_URL: !Ref CognitoAuthorizationUri
          BACKEND_CLIENT_SECRET_NAME: 'BackendCognitoClientCredentials'
      Events:
        GetEvent:
          Type: Api
          Properties:
            Path: /candidate
            Method: get
            RestApiId: !Ref ScientificIndexApi

  #============================= Database =========================================================
  NvaNviTable:
    Type: AWS::DynamoDB::Table
    UpdateReplacePolicy: Retain
    DeletionPolicy: Delete
    Properties:
      TableName: !Sub 'nva-nvi-${AWS::StackName}'
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: true
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: PrimaryKeyHashKey
          AttributeType: S
        - AttributeName: PrimaryKeyRangeKey
          AttributeType: S
        - AttributeName: SecondaryIndex1HashKey
          AttributeType: S
        - AttributeName: SecondaryIndex1RangeKey
          AttributeType: S
        - AttributeName: SearchByYearHashKey
          AttributeType: S
        - AttributeName: SearchByYearRangeKey
          AttributeType: S
      KeySchema:
        - AttributeName: PrimaryKeyHashKey
          KeyType: HASH
        - AttributeName: PrimaryKeyRangeKey
          KeyType: RANGE
      GlobalSecondaryIndexes:
        - IndexName: SearchByPublicationId
          KeySchema:
            - AttributeName: SecondaryIndex1HashKey
              KeyType: HASH
            - AttributeName: SecondaryIndex1RangeKey
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
        - IndexName: SearchByYear
          KeySchema:
            - AttributeName: SearchByYearHashKey
              KeyType: HASH
            - AttributeName: SearchByYearRangeKey
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES

  #============================= Alarms =========================================================

  BatchScanDLQAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: AWS/SQS ApproximateNumberOfMessagesVisible QueueName=BatchScanDLQ
      MetricName: ApproximateNumberOfMessagesVisible
      Namespace: AWS/SQS
      Statistic: Sum
      Dimensions:
        - Name: QueueName
          Value: !GetAtt BatchScanDLQ.QueueName
      Period: 300
      EvaluationPeriods: 1
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      AlarmActions:
        - !Ref SlackSnsArn

  NewCandidateDLQAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: AWS/SQS ApproximateNumberOfMessagesVisible QueueName=NewCandidateDLQ
      MetricName: ApproximateNumberOfMessagesVisible
      Namespace: AWS/SQS
      Statistic: Sum
      Dimensions:
        - Name: QueueName
          Value: !GetAtt NewCandidateDLQ.QueueName
      Period: 300
      EvaluationPeriods: 1
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      AlarmActions:
        - !Ref SlackSnsArn

  UpdateIndexDLQAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: AWS/SQS ApproximateNumberOfMessagesVisible QueueName=UpdateIndexDLQ
      MetricName: ApproximateNumberOfMessagesVisible
      Namespace: AWS/SQS
      Statistic: Sum
      Dimensions:
        - Name: QueueName
          Value: !GetAtt UpdateIndexDLQ.QueueName
      Period: 300
      EvaluationPeriods: 1
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      AlarmActions:
        - !Ref SlackSnsArn

  UpsertCandidateDLQAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: AWS/SQS ApproximateNumberOfMessagesVisible QueueName=UpsertCandidateDLQ
      MetricName: ApproximateNumberOfMessagesVisible
      Namespace: AWS/SQS
      Statistic: Sum
      Dimensions:
        - Name: QueueName
          Value: !GetAtt UpsertCandidateDLQ.QueueName
      Period: 300
      EvaluationPeriods: 1
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      AlarmActions:
        - !Ref SlackSnsArn

  DataEntryUpdateDLQAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: AWS/SQS ApproximateNumberOfMessagesVisible QueueName=DataEntryUpdateDLQ
      MetricName: ApproximateNumberOfMessagesVisible
      Namespace: AWS/SQS
      Statistic: Sum
      Dimensions:
        - Name: QueueName
          Value: !GetAtt DataEntryUpdateDLQ.QueueName
      Period: 300
      EvaluationPeriods: 1
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      AlarmActions:
        - !Ref SlackSnsArn

  IndexDLQAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: AWS/SQS ApproximateNumberOfMessagesVisible QueueName=IndexDLQ
      MetricName: ApproximateNumberOfMessagesVisible
      Namespace: AWS/SQS
      Statistic: Sum
      Dimensions:
        - Name: QueueName
          Value: !GetAtt IndexDLQ.QueueName
      Period: 300
      EvaluationPeriods: 1
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      AlarmActions:
        - !Ref SlackSnsArn

  DynamoDbEventToQueueDLQAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: AWS/SQS ApproximateNumberOfMessagesVisible QueueName=DynamoDbEventToQueueDLQ
      MetricName: ApproximateNumberOfMessagesVisible
      Namespace: AWS/SQS
      Statistic: Sum
      Dimensions:
        - Name: QueueName
          Value: !GetAtt DynamoDbEventToQueueDLQ.QueueName
      Period: 300
      EvaluationPeriods: 1
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      AlarmActions:
        - !Ref SlackSnsArn

  IndexDocumentDLQAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: AWS/SQS ApproximateNumberOfMessagesVisible QueueName=IndexDocumentDLQ
      MetricName: ApproximateNumberOfMessagesVisible
      Namespace: AWS/SQS
      Statistic: Sum
      Dimensions:
        - Name: QueueName
          Value: !GetAtt IndexDocumentDLQ.QueueName
      Period: 300
      EvaluationPeriods: 1
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      AlarmActions:
        - !Ref SlackSnsArn