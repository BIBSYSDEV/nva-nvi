plugins {
    id 'nva.nvi.java-conventions'
    id 'java-test-fixtures'
}

dependencies {
    implementation libs.aws.java.sdk.core
    implementation libs.aws.lambda.events
    implementation libs.aws.lambda.java.core
    implementation libs.aws.sdk2.core
    implementation libs.aws.sdk2.dynamodb
    implementation libs.aws.sdk2.eventbridge
    implementation libs.aws.sdk2.s3
    implementation libs.aws.sdk2.secrets
    implementation libs.aws.sdk2.sns
    implementation libs.aws.sdk2.sqs
    implementation libs.aws.sdk2.urlconnection
    implementation libs.aws.sdk2.urlconnectionclient
    implementation libs.bundles.jena
    implementation libs.bundles.logging
    implementation libs.com.auth0.jwt
    implementation libs.jackson.core
    implementation libs.jackson.csv
    implementation libs.jackson.databind
    implementation libs.nva.commons.auth
    implementation libs.nva.commons.core
    implementation libs.nva.commons.secrets
    implementation libs.nva.core
    implementation libs.nva.eventhandlers
    implementation libs.nva.json
    implementation libs.nva.s3
    implementation project(':nvi-commons')

    testFixturesAnnotationProcessor libs.errorprone
    testFixturesImplementation libs.aws.lambda.events
    testFixturesImplementation libs.aws.lambda.java.core
    testFixturesImplementation libs.aws.sdk2.sns
    testFixturesImplementation libs.bundles.cucumber
    testFixturesImplementation libs.bundles.testing
    testFixturesImplementation libs.com.auth0.jwt
    testFixturesImplementation libs.nva.commons.core
    testFixturesImplementation libs.nva.testutils
    testFixturesImplementation project(':nvi-test')
    testFixturesImplementation(testFixtures(project(":nvi-commons")))

    testImplementation libs.bundles.cucumber
    testImplementation libs.dynamodDbLocal
    testImplementation libs.jackson.datatype.jsr310
    testImplementation libs.nva.testutils
    testImplementation project(':nvi-test')
    testImplementation(testFixtures(project(":nvi-commons")))
}

test {
    useJUnitPlatform()
    environment("OUTPUT_EVENT_TOPIC", "someTopic")
    environment("TOPIC_REEVALUATE_CANDIDATES", "someTopic")
    environment("EVENT_BUS_NAME", "someEvent")
    environment("API_HOST", "api.dev.nva.aws.unit.no")
    environment("SEARCH_INFRASTRUCTURE_API_HOST", "localhost")
    environment("SEARCH_INFRASTRUCTURE_AUTH_URI", "localhost")
    environment("SEARCH_INFRASTRUCTURE_API_URI", "localhost")
    environment("NVI_TABLE_NAME", "some-table")
    environment("CUSTOM_DOMAIN_BASE_PATH", "scientific-index")
    environment("UPSERT_CANDIDATE_DLQ_QUEUE_URL", "UpsertCandidateDLQ")
    environment("PERSISTED_RESOURCE_QUEUE_URL", "PersistedResourceQueue")
    environment("DB_EVENTS_QUEUE_URL", "DbEventsQueue")
    environment("INDEX_DLQ", "IndexDlq")
    environment("EXPANDED_RESOURCES_BUCKET", "ignoredBucket")
    environment("BACKEND_CLIENT_AUTH_URL", "My url")
    environment("BACKEND_CLIENT_SECRET_NAME", "My secret name")
    environment("TOPIC_CANDIDATE_INSERT", "CANDIDATE_INSERT_TOPIC")
    environment("TOPIC_CANDIDATE_APPLICABLE_UPDATE", "CANDIDATE_APPLICABLE_UPDATE_TOPIC")
    environment("TOPIC_CANDIDATE_NOT_APPLICABLE_UPDATE", "CANDIDATE_NOT_APPLICABLE_UPDATE_TOPIC")
    environment("TOPIC_CANDIDATE_REMOVE", "CANDIDATE_REMOVE_TOPIC")
    environment("TOPIC_APPROVAL_INSERT", "APPROVAL_INSERT_TOPIC")
    environment("TOPIC_APPROVAL_UPDATE", "APPROVAL_UPDATE_TOPIC")
    environment("TOPIC_APPROVAL_REMOVE", "APPROVAL_REMOVE_TOPIC")
    environment("COGNITO_AUTHORIZER_URLS", "http://localhost:3000")
}
