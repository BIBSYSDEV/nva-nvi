plugins {
    id 'nva.nvi.java-conventions'
    id 'java-test-fixtures'
}

dependencies {
    testImplementation libs.aws.sdk2.sqs
    implementation libs.jackson.csv
    api nvaCatalog.aws.lambda.core
    api nvaCatalog.aws.lambda.events
    implementation nvaCatalog.aws.sdk2.core
    implementation nvaCatalog.aws.sdk2.dynamo
    api nvaCatalog.aws.sdk2.eventbridge
    api nvaCatalog.aws.sdk2.s3
    implementation nvaCatalog.aws.sdk2.urlconnection
    implementation nvaCatalog.bundles.jena
    implementation nvaCatalog.bundles.logging
    api nvaCatalog.jackson.core
    api nvaCatalog.jackson.databind
    api nvaLibs.auth
    api nvaLibs.core
    api nvaLibs.eventhandlers
    api nvaLibs.json
    implementation nvaLibs.s3
    api project(':nvi-commons')
    testFixturesAnnotationProcessor nvaCatalog.errorprone
    testFixturesApi libs.aws.sdk2.sns
    testFixturesImplementation nvaCatalog.aws.lambda.core
    testFixturesApi nvaCatalog.aws.lambda.events
    testFixturesImplementation nvaCatalog.bundles.testing.cucumber
    testFixturesImplementation nvaCatalog.bundles.testing.junit
    testFixturesImplementation nvaCatalog.mockito.core
    testFixturesImplementation nvaLibs.core
    testFixturesApi(testFixtures(project(":nvi-commons")))
    testImplementation nvaCatalog.assertj.core
    testImplementation nvaCatalog.bundles.testing.cucumber
    testImplementation nvaCatalog.bundles.testing.junit
    testImplementation nvaCatalog.hamcrest
    testRuntimeOnly nvaCatalog.jackson.datatype.jsr310
    testImplementation nvaCatalog.mockito.core
    testImplementation nvaLibs.logutils
    testImplementation nvaLibs.testutils
    testImplementation project(':nvi-test')
    testImplementation(testFixtures(project(":nvi-commons")))
  api nvaCatalog.jackson.annotations
  implementation 'software.amazon.awssdk:http-client-spi:2.31.78'
  testImplementation libs.aws.sdk2.dynamodbenhanced
  testFixturesApi project(':nvi-commons')
  testImplementation libs.aws.sdk2.regions
  testImplementation 'software.amazon.awssdk:http-client-spi:2.31.78'
}

test {
    useJUnitPlatform()
    environment("OUTPUT_EVENT_TOPIC", "someTopic")
    environment("TOPIC_REEVALUATE_CANDIDATES", "someTopic")
    environment("EVENT_BUS_NAME", "someEvent")
    environment("API_HOST", "api.dev.nva.aws.unit.no")
    environment("SEARCH_INFRASTRUCTURE_API_HOST", "localhost")
    environment("SEARCH_INFRASTRUCTURE_AUTH_URI", "localhost")
    environment("SEARCH_INFRASTRUCTURE_API_URI", "localhost")
    environment("NVI_TABLE_NAME", "some-table")
    environment("CUSTOM_DOMAIN_BASE_PATH", "scientific-index")
    environment("UPSERT_CANDIDATE_DLQ_QUEUE_URL", "UpsertCandidateDLQ")
    environment("PERSISTED_RESOURCE_QUEUE_URL", "PersistedResourceQueue")
    environment("DB_EVENTS_QUEUE_URL", "DbEventsQueue")
    environment("INDEX_DLQ", "IndexDlq")
    environment("EXPANDED_RESOURCES_BUCKET", "ignoredBucket")
    environment("BACKEND_CLIENT_AUTH_URL", "My url")
    environment("BACKEND_CLIENT_SECRET_NAME", "My secret name")
    environment("TOPIC_CANDIDATE_INSERT", "CANDIDATE_INSERT_TOPIC")
    environment("TOPIC_CANDIDATE_APPLICABLE_UPDATE", "CANDIDATE_APPLICABLE_UPDATE_TOPIC")
    environment("TOPIC_CANDIDATE_NOT_APPLICABLE_UPDATE", "CANDIDATE_NOT_APPLICABLE_UPDATE_TOPIC")
    environment("TOPIC_CANDIDATE_REMOVE", "CANDIDATE_REMOVE_TOPIC")
    environment("TOPIC_APPROVAL_INSERT", "APPROVAL_INSERT_TOPIC")
    environment("TOPIC_APPROVAL_UPDATE", "APPROVAL_UPDATE_TOPIC")
    environment("TOPIC_APPROVAL_REMOVE", "APPROVAL_REMOVE_TOPIC")
    environment("COGNITO_AUTHORIZER_URLS", "http://localhost:3000")
    environment("LOG_LEVEL", "debug")
}
