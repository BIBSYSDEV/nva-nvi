plugins {
    id 'nva.nvi.java-conventions'
}
dependencies {
    implementation nvaCatalog.aws.sdk2.dynamo
    api nvaCatalog.guava
    api nvaCatalog.jackson.databind
    api nvaLibs.apigateway
    implementation nvaLibs.auth
    api nvaLibs.clients
    api nvaLibs.core
    api nvaLibs.json
    api project(':nvi-commons')
    testImplementation nvaCatalog.assertj.core
    testImplementation nvaCatalog.bundles.testing.cucumber
    testImplementation nvaCatalog.bundles.testing.junit
    testImplementation nvaCatalog.hamcrest
    testImplementation nvaCatalog.mockito.core
    testImplementation nvaCatalog.zalando
    testImplementation nvaLibs.testutils
    testImplementation project(':nvi-test')
    testImplementation(testFixtures(project(":nvi-commons")))
  api nvaCatalog.jackson.annotations
  testImplementation nvaCatalog.jackson.core
  testImplementation nvaCatalog.aws.lambda.core
  implementation nvaCatalog.slf4j.api
  testImplementation 'software.amazon.awssdk:utils:2.31.78'
  api nvaCatalog.aws.lambda.core
  testImplementation 'org.apache.httpcomponents.core5:httpcore5:5.3.4'
}

test {
    environment("ALLOWED_ORIGIN", "*")
    environment("API_HOST", "api.fake.nva.aws.unit.no")
    environment("CANDIDATE_DLQ_URL", "http://localhost:3000/candidate-DLQ")
    environment("CANDIDATE_QUEUE_URL", "http://localhost:3000/candidate-queue")
    environment("CUSTOM_DOMAIN_BASE_PATH", "scientific-index")
    environment("SEARCH_INFRASTRUCTURE_API_HOST", "localhost")
    environment("SEARCH_INFRASTRUCTURE_AUTH_URI", "localhost")
    environment("SEARCH_INFRASTRUCTURE_API_URI", "localhost")
    environment("BACKEND_CLIENT_AUTH_URL", "My url")
    environment("BACKEND_CLIENT_SECRET_NAME", "My secret name")
    environment("EXPANDED_RESOURCES_BUCKET", "testBucket")
    environment("NVI_TABLE_NAME", "some-table")
    environment("COGNITO_AUTHORIZER_URLS", "http://localhost:3000")
    environment("UPSERT_CANDIDATE_DLQ_QUEUE_URL", "http://localhost:3000/upsert-candidate-DLQ")
    environment("LOG_LEVEL", "debug")
}
