plugins {
    id 'java'
    id 'checkstyle'
    id 'pmd'
    id 'jacoco'
    id 'base'
    id 'test-report-aggregation'
}

group = 'com.github.bibsysdev'

dependencies {
    testImplementation libs.bundles.testing

    implementation libs.aws.lambda.java.core
    implementation libs.bundles.nva
    implementation libs.bundles.logging
    implementation libs.bundles.jackson
    implementation libs.commons.validator
}

sourceCompatibility = JavaVersion.VERSION_11  // source-code version and must be <= targetCompatibility
targetCompatibility = JavaVersion.VERSION_11 // bytecode target version

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
}

tasks.named('test') {
    useJUnitPlatform()
    failFast = true
    testLogging {
        events 'skipped', 'passed', 'failed'
    }
}

tasks.named('check') {
    dependsOn tasks.named('testAggregateTestReport', TestReport)
}

test {
}

pmd {
    toolVersion = '6.20.0'
    ruleSetConfig = rootProject.resources.text.fromFile('config/pmd/ruleset.xml')
    ruleSets = []
    ignoreFailures = false
}

/*checkstyle {
    configFile = rootProject.resources.text.fromFile('config/checkstyle/checkstyle.xml').asFile()
    showViolations = true
}*/

tasks.withType(Checkstyle) {
    reports {
        xml.required
        html.required
        html.stylesheet rootProject.resources.text.fromFile('config/checkstyle/checkstyle-simple.xsl')
    }
}

check.dependsOn jacocoTestCoverageVerification
jacocoTestCoverageVerification.dependsOn(jacocoTestReport)

jacocoTestCoverageVerification {

    violationRules {
        rule {
            limit {
                counter = 'METHOD'
                value = 'COVEREDRATIO'
                minimum = 1.000
            }
        }

        rule {
            limit {
                counter = 'CLASS'
                value = 'COVEREDRATIO'
                minimum = 1.000
            }
        }
    }
}
