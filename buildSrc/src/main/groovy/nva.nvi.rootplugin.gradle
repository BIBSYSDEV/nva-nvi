plugins {
    id 'jacoco-report-aggregation'
    id 'base'
    id 'java-library'
}

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
    maven { url "https://s3.eu-central-1.amazonaws.com/dynamodb-local-frankfurt/release" }
}

dependencies {
    subprojects.forEach {
        jacocoAggregation it
    }
}

reporting {
    reports {
        testCodeCoverageReport(JacocoCoverageReport) {
            testType = TestSuiteType.UNIT_TEST
        }
        integrationTestCodeCoverageReport(JacocoCoverageReport) {
            testType = TestSuiteType.INTEGRATION_TEST
        }
    }
}

// Log clickable links to console for generated test coverage reports with
// a dedicated task that always runs (never up to date).
gradle.projectsEvaluated {
    tasks.register("printCoverageReportLinks") {
        outputs.upToDateWhen { false }

        // Depend on all subprojectsâ€™ coverage tasks + root coverage task
        dependsOn(subprojects.collect { it.tasks.named("testCodeCoverageReport") })
        dependsOn(tasks.named("testCodeCoverageReport"))

        doLast {
            def reportDirPath = "reports/jacoco/testCodeCoverageReport/html"
            subprojects.each { subproject ->
                def subprojectReportDir = subproject.layout.buildDirectory.dir(reportDirPath).get().asFile
                println "Coverage report for ${subproject.name}: \t\t file://${subprojectReportDir}/index.html"
            }
            def reportDir = layout.buildDirectory.dir(reportDirPath).get().asFile
            println "Combined coverage report (root): \t\t file://${reportDir}/index.html"
        }
    }
}

tasks.named('check') {
    dependsOn tasks.named('testCodeCoverageReport', JacocoReport)
    dependsOn tasks.named('integrationTestCodeCoverageReport', JacocoReport)
}
